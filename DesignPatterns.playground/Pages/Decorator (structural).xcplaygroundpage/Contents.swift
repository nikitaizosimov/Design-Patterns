import Foundation
import XCTest

/*:
 # Decorator
 https://refactoring.guru/ru/design-patterns/decorator/swift/example
 
 Декоратор — это структурный паттерн, который позволяет добавлять объектам новые поведения на лету, помещая их в объекты-обёртки.

 Декоратор позволяет оборачивать объекты бесчисленное количество раз благодаря тому, что и обёртки, и реальные оборачиваемые объекты имеют общий интерфейс.
 
 Паттерн можно часто встретить в Swift-коде, особенно в коде, работающем с потоками данных.

 Декоратор можно распознать по создающим методам, которые принимают в параметрах объекты того же абстрактного типа или интерфейса, что и текущий класс.
 */
